import telebot, time
from telebot import types, TeleBot

exstasy = 0
imlive = 0
secretfriends = 0
mydirtyhobbies = 0
islive = 0
camcontacts = 0
vxmodels = 0
xmodels = 0

bot: TeleBot = telebot.TeleBot('5319859431:AAH9lk9ibeuA8tWzcxFZ7A963hZXTA-ypSQ')

tconv = lambda x: time.strftime("%d.%m.%Y", time.localtime(x)) #–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥ (–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è time_send –≤—ã–≤–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ 09.06.2022)

# –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ "–£–∫–∞–∑–∞—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫", –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–æ—á–µ—Ä–µ–¥–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ —à–∞–ø–∫–µ
@bot.message_handler(func=lambda message: message.text == '–£–∫–∞–∑–∞—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∑–∞ –¥–µ–Ω—å üí∏')
def money(message):
    send_mess = "–•–æ—Ä–æ—à–æ, –¥–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º exstasy ‚úè: "
    bot.send_message(message.chat.id, send_mess)
    bot.register_next_step_handler(message, vol1)


def vol1(message):
    global exstasy
    exstasy = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å ImLive: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol2)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol1)


def vol2(message):
    global imlive
    imlive = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å MyDirtyHobbies: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol3)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol2)


def vol3(message):
    global mydirtyhobbies
    mydirtyhobbies = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å IsLive ‚Ç¨: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol4)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol3)


def vol4(message):
    global islive
    islive = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å CamContacts: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol5)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol4)


def vol5(message):
    global camcontacts
    camcontacts = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å VxModels: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol6)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol5)


def vol6(message):
    global vxmodels
    vxmodels = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å Xmodels: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol7)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol6)


def vol7(message):
    global xmodels
    xmodels = message.text
    if message.text.isdigit():
        send_mess = "–°–ø–∞—Å–∏–±–æ, —Ç–µ–ø–µ—Ä—å SecretFriends: "
        bot.send_message(message.chat.id, send_mess)
        bot.register_next_step_handler(message, vol8)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol7)


def vol8(message):
    global secretfriends
    secretfriends = message.text
    if message.text.isdigit():
        keyboard = types.InlineKeyboardMarkup()
        key_send = types.InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send")
        keyboard.add(key_send)
        key_edit = types.InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit")
        keyboard.add(key_edit)
        end_vol = "–í—Å–µ –≤–µ—Ä–Ω–æ?\n" + "\nExstasy: " + str(exstasy) + "\nImLive: " + str(imlive) + "\nSecretFriends: " + str(secretfriends) + "\nIsLive (‚Ç¨): " + str(islive) + "\nMyDirtyHobbies: " + str(mydirtyhobbies) + "\nCamContacts: " + str(camcontacts) + "\nVxModels: " + str(vxmodels) + "\nXModels: " + str(xmodels)
        bot.send_message(message.from_user.id, text=end_vol, reply_markup=keyboard)
        time_send = (tconv(message.date))
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞ 12,9. –¢–æ –æ–∫—Ä—É–≥–ª–∏ –¥–æ 12.")
        bot.register_next_step_handler(message, vol8)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ callback_data –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ (–û—Ç–ø—Ä–∞–≤–∏—Ç—å) –∏–ª–∏ (–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "send":
        bot.answer_callback_query(call.id)
        bot.send_message(call.message.chat.id, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    elif call.data == "edit":
# –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞
        bot.answer_callback_query(call.id)
        bot.send_message(call.message.chat.id, "–•–æ—Ä–æ—à–æ, –∑–∞–ø–æ–ª–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ")
        send_mess = "–î–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º exstasy ‚úè: "
        bot.send_message(call.message.chat.id, send_mess)
        bot.register_next_step_handler(call.message, vol1)


markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
btn1 = types.KeyboardButton('–£–∫–∞–∑–∞—Ç—å –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∑–∞ –¥–µ–Ω—å üí∏')
btn2 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å –æ –±–æ–Ω—É—Å–∞—Ö üí∞')
btn3 = types.KeyboardButton('FAQ ‚ùì')
markup.add(btn1, btn2, btn3)

markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
btn1 = types.KeyboardButton('–ú–æ–∂–Ω–æ –ª–∏ –∫—É—Ä–∏—Ç—å –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ–π?')
btn2 = types.KeyboardButton('–Ø –ø–ª–æ—Ö–æ –∑–Ω–∞—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —á—Ç–æ –¥–µ–ª–∞—Ç—å?')
btn3 = types.KeyboardButton('–•–æ—á—É —É–π—Ç–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É')
btn4 = types.KeyboardButton('–®—Ç—Ä–∞—Ñ—ã')
btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥')
markup3.add(btn1, btn2, btn3, btn4, btn5)


# markup4 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
# btn1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
# markup4.add(btn1)


@bot.message_handler(commands=['start', 'help'])
def start(message):
    username = message.from_user.username
    bot.send_message(message.chat.id, "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!", reply_markup=markup)
    send_mess = f"–ü—Ä–∏–≤–µ—Ç, {username}! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!"
    bot.send_message(message.chat.id, send_mess, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'FAQ ‚ùì')
def foo(message):
    send_mess = "–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
    bot.send_message(message.chat.id, send_mess, reply_markup=markup3)


@bot.message_handler(func=lambda message: message.text == '–ú–æ–∂–Ω–æ –ª–∏ –∫—É—Ä–∏—Ç—å –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ–π?')
def foo2(message):
    final_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ –≤—Å–µ —Å–∞–π—Ç—ã –æ–¥–æ–±—Ä—è—é—Ç –∫—É—Ä–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ–π, –∞ —Ç–∞–∫ –∫–∞–∫ –Ω–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–∞–π—Ç–∞—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —Ç–æ –∫—É—Ä–∏—Ç—å –ø–µ—Ä–µ–¥ –∫–∞–º–µ—Ä–æ–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!"
    bot.send_message(message.chat.id, final_message, reply_markup=markup3)


@bot.message_handler(func=lambda message: message.text == '–Ø –ø–ª–æ—Ö–æ –∑–Ω–∞—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —á—Ç–æ –¥–µ–ª–∞—Ç—å?')
def foo3(message):
    final_message = "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –µ—Å–ª–∏ —Ç–µ–±–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –º–Ω–æ–≥–æ –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —É –Ω–∞—Å –≤ —à—Ç–∞—Ç–µ –±—É–¥–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –æ–Ω –±—É–¥–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –∏ –æ–±—É—á–∞—Ç—å –Ω–∞—Å –æ—Å–Ω–æ–≤–∞–º, —á—Ç–æ–± –±—ã —Ç–µ–±–µ –±—ã–ª–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –±–∞–Ω–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—â–∞—Ç—å—Å—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –º–µ–º–±–µ—Ä–∞–º–∏ —Å—Ä–∞–∑—É!"
    bot.send_message(message.chat.id, final_message, reply_markup=markup3)


@bot.message_handler(func=lambda message: message.text == '–•–æ—á—É —É–π—Ç–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É')
def foo4(message):
    final_message = "–ú—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç —É–π—Ç–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ø–æ–µ–∑–¥–∫–∏ –≤ —Å—Ç—É–¥–∏—é. –ù–æ —á—Ç–æ–±—ã —É–π—Ç–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤: \n 1. –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å—Ç—É–¥–∏–∏ Muskad –æ—Ç 1 –≥–æ–¥–∞ –∏ –±–æ–ª–µ–µ \n 2. –î–æ–º–∞ –µ—Å—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ (–•–æ—Ç—è –±—ã —Ö–æ—Ä–æ—à–∏–π —Å–≤–µ—Ç –∏ —è—Ä–∫–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞, –Ω–æ—É—Ç–±—É–∫ –∏ –∫–∞–º–µ—Ä—É –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É)"
    bot.send_message(message.chat.id, final_message, reply_markup=markup3)


@bot.message_handler(func=lambda message: message.text == '–®—Ç—Ä–∞—Ñ—ã')
def foo5(message):
    final_message = "–ü—Ä–æ–≥—É–ª —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —à—Ç—Ä–∞—Ñ–æ–º, –∫–∞–∫ –±—ã —Å—É—Ä–æ–≤–æ —ç—Ç–æ –Ω–µ –±—ã–ª–æ, –≤—ã–≥–æ–¥—É —Ç–µ—Ä—è–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –≤—ã. –®—Ç—Ä–∞—Ñ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç 3 000—Ä –¥–æ 6 000—Ä –≤ —Å—É—Ç–∫–∏. –ü—Ä–æ–≥—É–ª –ø–æ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ (–µ—Å—Ç—å —Å–ø—Ä–∞–≤–∫–∞), —à—Ç—Ä–∞—Ñ–æ–º –Ω–µ –æ–±–ª–∞–≥–∞–µ—Ç—Å—è."
    bot.send_message(message.chat.id, final_message, reply_markup=markup3)


@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥')
def foo6(message):
    final_message = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    bot.send_message(message.chat.id, final_message, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–£–∑–Ω–∞—Ç—å –æ –±–æ–Ω—É—Å–∞—Ö üí∞")
def foo7(message):
    final_message = "–£ –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–≤–æ—è –ø–æ–¥—Ä—É–≥–∞ —Ö–æ—á–µ—Ç –≤—Å—Ç—É–ø–∏—Ç—å –∫ –Ω–∞–º –≤ –∫–æ–º–∞–Ω–¥—É, —Ç–æ –º—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É, –∞ —Ç–µ–±–µ –±—É–¥–µ—Ç –ø–æ–ª–æ–∂–µ–Ω –±–æ–Ω—É—Å 5 000‚ÇΩ. –ù–æ –µ—Å—Ç—å –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ, —Ç–≤–æ—è –ø–æ–¥—Ä—É–≥–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–π—Ç–∏ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫ —Ä–∞–≤–Ω—ã–π 1 –º–µ—Å—è—Ü—É. "
    bot.send_message(message.chat.id, final_message, parse_mode='html', reply_markup=markup)


bot.polling(none_stop=True)
